version: '3.7'
services:
# Organizr front end combines all apps into one website
  organizr:
    container_name: $STACK-organizr
    image: organizrtools/organizr-v2
    restart: always
    # ports:
    #   - "8888:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.$STACK-organizr.rule=Host(`$ORGANIZR.$DOMAIN`)"
      - "traefik.http.routers.$STACK-organizr.entrypoints=websecure"
      - "traefik.http.routers.$STACK-organizr.tls.certresolver=mytlschallenge"
      - "traefik.http.services.$STACK-organizr.loadbalancer.server.port=80"
      # - "traefik.http.services.$STACK-organizr.loadbalancer.server.scheme=http"
    environment:
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $APPDATA/$STACK/organizr_config:/config
    networks:
      - net

# Streaming & Compainion apps
  emby:
    container_name: $STACK-emby
    image: emby/embyserver
    restart: always
    # ports:
    #   - "8096:8096"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.$STACK-emby.rule=Host(`$EMBY.$DOMAIN`)"
      - "traefik.http.routers.$STACK-emby.entrypoints=websecure"
      - "traefik.http.routers.$STACK-emby.tls.certresolver=mytlschallenge"
      - "traefik.http.services.$STACK-emby.loadbalancer.server.port=8096"
    environment:
      - PGID=$PGID
      - PUID=$PUID
      - GIDLIST=$PGID
    volumes:
      - $APPDATA/$STACK/emby_config:/config
      - $MEDIA:/data/media
      - $GMEDIA:/data/gcrypt/media
    networks:
      - net

  # jellyfin:
  #   container_name: $STACK-jellyfin
  #   image: linuxserver/jellyfin
  #   restart: always
  #   # devices:
  #   #   - "/dev/dri:/dev/dri" # This is specific to my setup as my cpu supports intel quick sync
  #   ports:
  #     - "8097:8096"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.$STACK-jellyfin.rule=Host(`$JELLYFIN.$DOMAIN`)"
  #     - "traefik.http.routers.$STACK-jellyfin.entrypoints=websecure"
  #     - "traefik.http.routers.$STACK-jellyfin.tls.certresolver=mytlschallenge"
  #     - "traefik.http.services.$STACK-jellyfin.loadbalancer.server.port=8096"
  #   environment:
  #     - TZ=$TIMEZONE
  #     - PGID=$PGID
  #     - PUID=$PUID
  #   volumes:
  #     - $APPDATA/$STACK/jellyfin_config:/config
  #     - $MEDIA/transcode:/transcode
  #     - $MEDIA:/data/media
  #     - $GMEDIA:/data/gcrypt/media
  #   networks:
  #     - net

  # airsonic:
  #   container_name: $STACK-airsonic
  #   image: linuxserver/airsonic
  #   restart: always
  #   # ports:
  #   #   - "4040:4040"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.$STACK-airsonic.rule=Host(`$AIRSONIC.$DOMAIN`)"
  #     - "traefik.http.routers.$STACK-airsonic.entrypoints=websecure"
  #     - "traefik.http.routers.$STACK-airsonic.tls.certresolver=mytlschallenge"
  #     - "traefik.http.services.$STACK-airsonic.loadbalancer.server.port=4040"
  #   environment:
  #     - TZ=$TIMEZONE
  #     - PGID=$PGID
  #     - PUID=$PUID
  #   volumes:
  #     - $APPDATA/$STACK/airsonic_config:/config
  #     - $MEDIA/music:/data/music
  #     - $MEDIA/music/playlists:/data/music/playlists
  #     - $MEDIA/music/podcasts:/data/music/podcasts
  #   networks:
  #     - net

  ombi:
    container_name: $STACK-ombi
    image: linuxserver/ombi
    restart: always
    # ports:
    #   - "3579:3579"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.$STACK-ombi.rule=Host(`$OMBI.$DOMAIN`)"
      - "traefik.http.routers.$STACK-ombi.entrypoints=websecure"
      - "traefik.http.routers.$STACK-ombi.tls.certresolver=mytlschallenge"
      - "traefik.http.services.$STACK-ombi.loadbalancer.server.port=3579"
    environment:
      - TZ=$TIMEZONE
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $APPDATA/$STACK/ombi_config:/config
    networks:
      - net

# Indexer apps
  sonarr:
    container_name: $STACK-sonarr
    image: linuxserver/sonarr:preview
    restart: always
    # ports:
    #   - "8989:8989"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.$STACK-sonarr.rule=Host(`$SONARR.$DOMAIN`)"
      - "traefik.http.routers.$STACK-sonarr.entrypoints=websecure"
      - "traefik.http.routers.$STACK-sonarr.tls.certresolver=mytlschallenge"
      - "traefik.http.services.$STACK-sonarr.loadbalancer.server.port=8989"
    environment:
      - TZ=$TIMEZONE
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $APPDATA/$STACK/sonarr_config:/config
      - $GMEDIA/tvshows:/data/gcrypt/media/tv
      - $MEDIA/temp:/data/media/temp
      - $MEDIA/tvshows:/data/media/tv
      - $MEDIA/downloads/torrent:/data/media/downloads/torrent
      - $MEDIA/downloads/usenet:/data/media/downloads/usenet
    networks:
      - net

  radarr:
    container_name: $STACK-radarr
    image: linuxserver/radarr:nightly
    restart: always
    # ports:
    #   - "7878:7878"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.$STACK-radarr.rule=Host(`$RADARR.$DOMAIN`)"
      - "traefik.http.routers.$STACK-radarr.entrypoints=websecure"
      - "traefik.http.routers.$STACK-radarr.tls.certresolver=mytlschallenge"
      - "traefik.http.services.$STACK-radarr.loadbalancer.server.port=7878"
    environment:
      - TZ=$TIMEZONE
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $APPDATA/$STACK/radarr_config:/config
      - $GMEDIA/movies:/data/gcrypt/media/movies
      - $MEDIA/temp:/data/media/temp
      - $MEDIA/movies:/data/media/movies
      - $MEDIA/downloads/torrent:/data/media/downloads/torrent
      - $MEDIA/downloads/usenet:/data/media/downloads/usenet
    networks:
      - net

  radarr4k:
    container_name: $STACK-radarr4k
    image: linuxserver/radarr:nightly
    restart: always
    # ports:
    #   - "7887:7878"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.$STACK-radarr4k.rule=Host(`$RADARR4K.$DOMAIN`)"
      - "traefik.http.routers.$STACK-radarr4k.entrypoints=websecure"
      - "traefik.http.routers.$STACK-radarr4k.tls.certresolver=mytlschallenge"
      - "traefik.http.services.$STACK-radarr4k.loadbalancer.server.port=7878"
    environment:
      - TZ=$TIMEZONE
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $APPDATA/$STACK/radarr4k_config:/config
      - $GMEDIA/movies:/data/gcrypt/media/movies
      - $MEDIA/temp:/data/media/temp
      - $MEDIA/movies:/data/media/movies
      - $MEDIA/downloads/torrent:/data/media/downloads/torrent
      - $MEDIA/downloads/usenet:/data/media/downloads/usenet
    networks:
      - net

  # radarr-collection:
  #   container_name: $STACK-radarr_collection
  #   image: si0972/radarr-collections
  #   restart: always
  #   depends_on:
  #     - radarr
  #   environment:
  #     - PGID=$PGID
  #     - PUID=$PUID
  #     - args=$ARGS
  #   volumes:
  #     - $APPDATA/$STACK/radarrcollection_config:/config
  #   networks:
  #     - net

  lidarr:
    container_name: $STACK-lidarr
    image: linuxserver/lidarr
    restart: always
    # ports:
    #   - "8686:8686"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.$STACK-lidarr.rule=Host(`$LIDARR.$DOMAIN`)"
      - "traefik.http.routers.$STACK-lidarr.entrypoints=websecure"
      - "traefik.http.routers.$STACK-lidarr.tls.certresolver=mytlschallenge"
      - "traefik.http.services.$STACK-lidarr.loadbalancer.server.port=8686"
    environment:
      - TZ=$TIMEZONE
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $APPDATA/$STACK/lidarr_config:/config
      - $MEDIA/temp:/data/media/temp
      - $MEDIA/downloads/torrent:/data/media/downloads/torrent
      - $MEDIA/downloads/usenet:/data/media/downloads/usenet
      - $GMEDIA/music:/data/gcrypt/media/music
      - $MEDIA/music:/data/media/music
    networks:
      - net

# Indexer source apps
  jackett:
    container_name: $STACK-jackett
    image: linuxserver/jackett:development
    restart: always
    # ports:
    #   - "9117:9117"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.$STACK-jackett.rule=Host(`$JACKETT.$DOMAIN`)"
      - "traefik.http.routers.$STACK-jackett.entrypoints=websecure"
      - "traefik.http.routers.$STACK-jackett.tls.certresolver=mytlschallenge"
      - "traefik.http.services.$STACK-jackett.loadbalancer.server.port=9117"
    environment:
      - TZ=$TIMEZONE
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $APPDATA/$STACK/jackett_config:/config
      - $MEDIA/downloads/torrent:/data/media/downloads/torrent
      - $MEDIA/downloads/usenet:/data/media/downloads/usenet
    networks:
      - net

# Torrent download clients
  # transmission:
  #   container_name: $STACK-transmission
  #   image: haugene/transmission-openvpn
  #   restart: always
  #   cap_add:
  #     - NET_ADMIN
  #   dns:
  #     - 8.8.8.8
  #     - 8.8.4.4
  #   # ports:
  #   #   - "9091:9091"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.$STACK-transmission.rule=Host(`$TRANSMISSION.$DOMAIN`)"
  #     - "traefik.http.routers.$STACK-transmission.entrypoints=websecure"
  #     - "traefik.http.routers.$STACK-transmission.tls.certresolver=mytlschallenge"
  #     - "traefik.http.services.$STACK-transmission.loadbalancer.server.port=9091"
  #   environment:
  #     - PGID=$PGID
  #     - PUID=$PUID
  #     - CREATE_TUN_DEVICE=$CREATE_TUN_DEVICE
  #     - OPENVPN_PROVIDER=$OPENVPN_PROVIDER
  #     - OPENVPN_CONFIG=$OPENVPN_CONFIG
  #     - OPENVPN_USERNAME=$OPENVPN_USERNAME
  #     - OPENVPN_PASSWORD=$OPENVPN_PASSWORD
  #     - OPENVPN_OPTS=$OPENVPN_OPTS
  #     - NORDVPN_PROTOCOL=$NORDVPN_PROTOCOL
  #     - NORDVPN_CATEGORY=$NORDVPN_CATEGORY
  #     - WEBPROXY_ENABLED=false
  #     - LOCAL_NETWORK=$LOCAL_NETWORK
  #     - TRANSMISSION_DOWNLOAD_DIR=$TRANSMISSION_DOWNLOAD_DIR
  #     - TRANSMISSION_SCRAPE_PAUSED_TORRENTS_ENABLED=false
  #     - TRANSMISSION_RATIO_LIMIT_ENABLED=$TRANSMISSION_RATIO_LIMIT_ENABLED
  #     - TRANSMISSION_RATIO_LIMIT=$TRANSMISSION_RATIO_LIMIT
  #     - TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED=$TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED
  #     - TRANSMISSION_IDLE_SEEDING_LIMIT=$TRANSMISSION_IDLE_SEEDING_LIMIT
  #     - TRANSMISSION_DOWNLOAD_QUEUE_ENABLED=$TRANSMISSION_DOWNLOAD_QUEUE_ENABLED
  #     - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=$TRANSMISSION_DOWNLOAD_QUEUE_SIZE
  #     - TRANSMISSION_PORT_FORWARDING_ENABLED=$TRANSMISSION_PORT_FORWARDING_ENABLED
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - $MEDIA/downloads/torrent:/data/media/downloads/torrent
  #   networks:
  #     - net

# Usenet download clients
  nzbget:
    image: "linuxserver/nzbget:testing"
    container_name: $STACK-nzbget
    restart: always
    # ports:
    #   - 6789:6789
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.$STACK-nzbget.rule=Host(`$NZBGET.$DOMAIN`)"
      - "traefik.http.routers.$STACK-nzbget.entrypoints=websecure"
      - "traefik.http.routers.$STACK-nzbget.tls.certresolver=mytlschallenge"
      - "traefik.http.services.$STACK-nzbget.loadbalancer.server.port=6789"
      - "traefik.http.routers.$STACK-nzbget.middlewares=auth"
      - "traefik.http.middlewares.auth.forwardauth.address=http://$STACK-organizr/api/?v1/auth&group=1"
    depends_on:
      - organizr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TIMEZONE
    volumes:
      - $APPDATA/$STACK/nzbget_config:/config
      - $MEDIA/downloads/usenet:/data/media/downloads/usenet
    networks:
      - net

# Utility containers
# Watchtower auto update
  watchtower:
    image: "v2tec/watchtower"
    container_name: $STACK-watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - net

networks:
  net:
    name: mediacenter_net
