version: '3.7'
services:
# Organizr front end combines all apps into one website
  organizr:
    container_name: $STACK-organizr
    image: organizrtools/organizr-v2
    restart: always
    ports:
      - "80:80"
    environment:
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $APPDATA/organizr_config:/config
    networks:
      - ext_net

# Streaming & Compainion apps
  emby:
    container_name: $STACK-emby
    image: emby/embyserver
    restart: always
    ports:
      - "8096:8096"
    environment:
      - PGID=$PGID
      - PUID=$PUID
      - GIDLIST=$PGID
    volumes:
      - $APPDATA/emby_config:/config
      - $MEDIA:/data/media
    networks:
      - ext_net

  # jellyfin:
  #   container_name: $STACK-jellyfin
  #   image: linuxserver/jellyfin
  #   restart: always
  #   devices:
  #     - "/dev/dri:/dev/dri" # This is specific to my setup as my cpu supports intel quick sync
  #   ports:
  #     - "8100:8096"
  #     - "8101:8097"
  #   environment:
  #     - TZ=$TIMEZONE
  #     - PGID=$PGID
  #     - PUID=$PUID
  #   volumes:
  #     - $APPDATA/jellyfin_config:/config
  #     - $MEDIA:/data/media
  #   networks:
  #     - ext_net

  airsonic:
    container_name: $STACK-airsonic
    image: linuxserver/airsonic
    restart: always
    depends_on:
      - organizr
    ports:
      - "4040:4040"
    environment:
      - TZ=$TIMEZONE
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $APPDATA/airsonic_config:/config
      - $MEDIA/music:/data/music
      - $MEDIA/music/playlists:/data/music/playlists
      - $MEDIA/music/podcasts:/data/music/podcasts
    networks:
      - ext_net

  ombi:
    container_name: $STACK-ombi
    image: linuxserver/ombi
    restart: always
    depends_on:
      - organizr
    ports:
      - "3579:3579"
    environment:
      - TZ=$TIMEZONE
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $APPDATA/ombi_config:/config
    networks:
      - ext_net

# Indexer apps
  sonarr:
    container_name: $STACK-sonarr
    image: linuxserver/sonarr:preview
    restart: always
    depends_on:
      - organizr
    ports:
      - "8989:8989"
    environment:
      - TZ=$TIMEZONE
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $APPDATA/sonarr_config:/config
      - $MEDIA/temp:/data/media/temp
      - $MEDIA/tvshows:/data/media/tv
      - $MEDIA/kids_tvshows:/data/media/kids_tv
      - $MEDIA/anime_tv:/data/media/anime_tv
      - $MEDIA/downloads/torrent:/data/media/downloads/torrent
      - $MEDIA/downloads/usenet:/data/media/downloads/usenet
    networks:
      - ext_net

  radarr:
    container_name: $STACK-radarr
    image: linuxserver/radarr:nightly
    restart: always
    depends_on:
      - organizr
    ports:
      - "7878:7878"
    environment:
      - TZ=$TIMEZONE
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $APPDATA/radarr_config:/config
      - $MEDIA/temp:/data/media/temp
      - $MEDIA/movies:/data/media/movies
      - $MEDIA/kids_movies:/data/media/kids_movies
      - $MEDIA/anime_movies:/data/media/anime_movies
      - $MEDIA/downloads/torrent:/data/media/downloads/torrent
      - $MEDIA/downloads/usenet:/data/media/downloads/usenet
    networks:
      - ext_net

  # radarr-collection:
  #   container_name: $STACK-radarr_collection
  #   image: si0972/radarr-collections
  #   restart: always
  #   depends_on:
  #     - radarr
  #   environment:
  #     - PGID=$PGID
  #     - PUID=$PUID
  #     - args=$ARGS
  #   volumes:
  #     - $APPDATA/radarrcollection_config:/config
  #   networks:
  #     - ext_net

  lidarr:
    container_name: $STACK-lidarr
    image: linuxserver/lidarr
    restart: always
    depends_on:
      - organizr
    ports:
      - "8686:8686"
    environment:
      - TZ=$TIMEZONE
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $APPDATA/lidarr_config:/config
      - $MEDIA/temp:/data/media/temp
      - $MEDIA/downloads/torrent:/data/media/downloads/torrent
      - $MEDIA/downloads/usenet:/data/media/downloads/usenet
      - $MEDIA/music:/data/media/music
    networks:
      - ext_net

# Indexer source apps
  jackett:
    container_name: $STACK-jackett
    image: linuxserver/jackett:development
    restart: always
    depends_on:
      - organizr
    ports:
      - "9117:9117"
    environment:
      - TZ=$TIMEZONE
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $APPDATA/jackett_config:/config
      - $MEDIA/downloads/torrent:/data/media/downloads/torrent
      - $MEDIA/downloads/usenet:/data/media/downloads/usenet
    networks:
      - ext_net

# Torrent download clients
  transmission:
    container_name: $STACK-transmission
    image: haugene/transmission-openvpn
    restart: always
    cap_add:
      - NET_ADMIN
    dns:
      - 8.8.8.8
      - 8.8.4.4
    depends_on:
      - organizr
    ports:
      - "9091:9091"
    environment:
      - PGID=$PGID
      - PUID=$PUID
      - CREATE_TUN_DEVICE=$CREATE_TUN_DEVICE
      - OPENVPN_PROVIDER=$OPENVPN_PROVIDER
      - OPENVPN_CONFIG=$OPENVPN_CONFIG
      - OPENVPN_USERNAME=$OPENVPN_USERNAME
      - OPENVPN_PASSWORD=$OPENVPN_PASSWORD
      - OPENVPN_OPTS=$OPENVPN_OPTS
      - NORDVPN_PROTOCOL=$NORDVPN_PROTOCOL
      - NORDVPN_CATEGORY=$NORDVPN_CATEGORY
      - WEBPROXY_ENABLED=false
      - LOCAL_NETWORK=$LOCAL_NETWORK
      - TRANSMISSION_DOWNLOAD_DIR=$TRANSMISSION_DOWNLOAD_DIR
      - TRANSMISSION_SCRAPE_PAUSED_TORRENTS_ENABLED=false
      - TRANSMISSION_RATIO_LIMIT_ENABLED=$TRANSMISSION_RATIO_LIMIT_ENABLED
      - TRANSMISSION_RATIO_LIMIT=$TRANSMISSION_RATIO_LIMIT
      - TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED=$TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED
      - TRANSMISSION_IDLE_SEEDING_LIMIT=$TRANSMISSION_IDLE_SEEDING_LIMIT
      - TRANSMISSION_DOWNLOAD_QUEUE_ENABLED=$TRANSMISSION_DOWNLOAD_QUEUE_ENABLED
      - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=$TRANSMISSION_DOWNLOAD_QUEUE_SIZE
      - TRANSMISSION_PORT_FORWARDING_ENABLED=$TRANSMISSION_PORT_FORWARDING_ENABLED
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $MEDIA/downloads/torrent:/data/media/downloads/torrent
    networks:
      - ext_net

# Usenet download clients
  nzbget:
    image: "linuxserver/nzbget:testing"
    container_name: $STACK-nzbget
    restart: always
    depends_on:
      - organizr
    ports:
      - 6789:6789
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TIMEZONE
    volumes:
      - $APPDATA/nzbget_config:/config
      - $MEDIA/downloads/usenet:/data/media/downloads/usenet
    networks:
      - ext_net

# Utility services
  # ddclient:
  #   image: "linuxserver/ddclient"
  #   container_name: $STACK-ddclient
  #   restart: always
  #   environment:
  #     - PUID=$PUID
  #     - PGID=$PGID
  #     - TZ=$TIMEZONE
  #   volumes:
  #     - $APPDATA/ddclient_config:/config
  #   networks:
  #     - ext_net

networks:
  ext_net:
    name: mediacenter_ext_net
