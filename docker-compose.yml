version: '3.4'
services:
# Organizr front end combines all apps into one website
  organizr:
    container_name: $STACK-$ORGANIZR
    image: organizrtools/organizr-v2
    restart: always
    labels:
      - "traefik.enable=true" # Enable reverse-proxy for this service
      - "traefik.frontend.rule=Host:$ORGANIZR.$DOMAIN" # Domain name for the app
      - "traefik.port=80"
    environment:
      - VIRTUAL_HOST=$ORGANIZR.$DOMAIN
      - VIRTUAL_PORT=80
      - PGID=$GROUPID
      - PUID=$USERID
    volumes:
      - organizr_config:/config
    networks:
      - ext_net

# Streaming & Compainion apps
  emby:
    container_name: $STACK-$EMBY
    image: emby/embyserver
    restart: always
    labels:
      - "traefik.enable=true" # Enable reverse-proxy for this service
      - "traefik.frontend.rule=Host:$EMBY.$DOMAIN" # Domain name for the app
      - "traefik.frontend.auth.forward.address=http://organizr/api/?v1/auth&group=999"
      - "traefik.port=8096"
    ports:
      -  "8096:8096"
    environment:
      - VIRTUAL_HOST=$EMBY.$DOMAIN
      - VIRTUAL_PORT=8096
      - PGID=$GROUPID
      - PUID=$USERID
      - GIDLIST=$GROUPID
    volumes:
      - $APPDATA/$STACK/$EMBY:/config
      - $MEDIA:/data/media
    networks:
      - ext_net

  # embystat:
  #   container_name: $STACK-$EMBYSTAT
  #   image: uping/embystat:latest-linux
  #   restart: always
  #   depends_on:
  #     - emby
  #   networks:
  #     - ext_net

  # jellyfin:
  #   container_name: $STACK-$JELLYFIN
  #   image: linuxserver/jellyfin
  #   restart: always
  #    depends_on:
  #      - organizr
  #   ports:
  #     - 8097:8096
  #   environment:
  #     - TZ=$TIMEZONE
  #     - PGID=$GROUPID
  #     - PUID=$USERID
  #   volumes:
  #     - $APPDATA/$STACK/$JELLYFIN:/config
  #     - $MEDIA:/data/media
  #   networks:
  #     - ext_net

  airsonic:
    container_name: $STACK-$AIRSONIC
    image: linuxserver/airsonic
    restart: always
    depends_on:
      - organizr
    labels:
      - "traefik.enable=true" # Enable reverse-proxy for this service
      - "traefik.frontend.rule=Host:$AIRSONIC.$DOMAIN" # Domain name for the app
      - "traefik.frontend.auth.forward.address=http://organizr/api/?v1/auth&group=4"
      - "traefik.port=4040"
    environment:
      - VIRTUAL_HOST=$AIRSONIC.$DOMAIN
      - VIRTUAL_PORT=4040
      - TZ=$TIMEZONE
      - PGID=$GROUPID
      - PUID=$USERID
    volumes:
      - airsonic_config:/config
      - $MEDIA/music:/data/music
      - $MEDIA/playlists:/data/playlists
      - $MEDIA/podcasts:/data/podcasts
    networks:
      - ext_net

  ombi:
    container_name: $STACK-$OMBI
    image: linuxserver/ombi
    restart: always
    depends_on:
      - organizr
    labels:
      - "traefik.enable=true" # Enable reverse-proxy for this service
      - "traefik.frontend.rule=Host:$OMBI.$DOMAIN" # Domain name for the app
      - "traefik.frontend.auth.forward.address=http://organizr/api/?v1/auth&group=999"
      - "traefik.port=3579"
    environment:
      - VIRTUAL_HOST=$OMBI.$DOMAIN
      - VIRTUAL_PORT=3579
      - TZ=$TIMEZONE
      - PGID=$GROUPID
      - PUID=$USERID
    volumes:
      - ombi_config:/config
    networks:
      - ext_net

  omv:
    image: qoomon/docker-host
    container_name: $STACK-$HOSTAPP
    restart: always
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    depends_on:
      - organizr
    labels:
      - "traefik.enable=true" # Enable reverse-proxy for this service
      - "traefik.frontend.rule=Host:$HOSTAPP.$DOMAIN" # Domain name for the app
      - "traefik.frontend.auth.forward.address=http://organizr/api/?v1/auth&group=1"
      - "traefik.port=$HOSTPORT"
    environment:
      - VIRTUAL_HOST=$HOSTAPP.$DOMAIN
      - VIRTUAL_PORT=$HOSTPORT
    expose:
      - "$HOSTPORT"
    networks:
      - ext_net

# Indexer apps
  sonarr:
    container_name: $STACK-$SONARR
    image: linuxserver/sonarr:preview
    restart: always
    depends_on:
      - organizr
    labels:
      - "traefik.enable=true" # Enable reverse-proxy for this service
      - "traefik.frontend.rule=Host:$SONARR.$DOMAIN" # Domain name for the app
      - "traefik.frontend.auth.forward.address=http://organizr/api/?v1/auth&group=1"
      - "traefik.port=8989"
    ports:
      - "8989:8989"
    environment:
      - VIRTUAL_HOST=$SONARR.$DOMAIN
      - VIRTUAL_PORT=8989
      - TZ=$TIMEZONE
      - PGID=$GROUPID
      - PUID=$USERID
    volumes:
      - $APPDATA/$STACK/$SONARR:/config
      - $MEDIA/temp:/data/temp
      - $MEDIA/tvshows:/data/tv
      - $DOWNLOADS/torrent:/data/downloads/torrent
      - $DOWNLOADS/usenet:/data/downloads/usenet
    networks:
      - ext_net

  radarr:
    container_name: $STACK-$RADARR
    image: linuxserver/radarr:nightly
    restart: always
    depends_on:
      - organizr
    labels:
      - "traefik.enable=true" # Enable reverse-proxy for this service
      - "traefik.frontend.rule=Host:$RADARR.$DOMAIN" # Domain name for the app
      - "traefik.frontend.auth.forward.address=http://organizr/api/?v1/auth&group=1"
      - "traefik.port=7878"
    ports:
      - "7878:7878"
    environment:
      - VIRTUAL_HOST=$RADARR.$DOMAIN
      - VIRTUAL_PORT=7878
      - TZ=$TIMEZONE
      - PGID=$GROUPID
      - PUID=$USERID
    volumes:
      - $APPDATA/$STACK/$RADARR:/config
      - $MEDIA/temp:/data/temp
      - $MEDIA/movies:/data/movies
      - $DOWNLOADS/torrent:/data/downloads/torrent
      - $DOWNLOADS/usenet:/data/downloads/usenet
    networks:
      - ext_net

  radarr-collection:
    container_name: $STACK-$RADARRCOLLECTION
    image: si0972/radarr-collections
    restart: always
    depends_on:
      - radarr
    environment:
      - PGID=$GROUPID
      - PUID=$USERID
      - args=$ARGS
    volumes:
      - $APPDATA/$STACK/$RADARRCOLLECTION:/config
    networks:
      - ext_net

  lidarr:
    container_name: $STACK-$LIDARR
    image: linuxserver/lidarr
    restart: always
    depends_on:
      - organizr
    labels:
      - "traefik.enable=true" # Enable reverse-proxy for this service
      - "traefik.frontend.rule=Host:$LIDARR.$DOMAIN" # Domain name for the app
      - "traefik.frontend.auth.forward.address=http://organizr/api/?v1/auth&group=1"
      - "traefik.port=8686"
    ports:
      - "8686:8686"
    environment:
      - VIRTUAL_HOST=$LIDARR.$DOMAIN
      - VIRTUAL_PORT=8686
      - TZ=$TIMEZONE
      - PGID=$GROUPID
      - PUID=$USERID
    volumes:
      - $APPDATA/$STACK/$LIDARR:/config
      - $MEDIA/temp:/data/temp
      - $DOWNLOADS/torrent:/data/downloads/torrent
      - $DOWNLOADS/usenet:/data/downloads/usenet
      - $MEDIA/music:/data/music
    networks:
      - ext_net

# Indexer source apps
  jackett:
    container_name: $STACK-$JACKETT
    image: linuxserver/jackett:development
    restart: always
    depends_on:
      - organizr
    labels:
      - "traefik.enable=true" # Enable reverse-proxy for this service
      - "traefik.frontend.rule=Host:$JACKETT.$DOMAIN" # Domain name for the app
      - "traefik.frontend.auth.forward.address=http://organizr/api/?v1/auth&group=1"
      - "traefik.port=9117"
    ports:
      - "9117:9117"
    environment:
      - VIRTUAL_HOST=$JACKETT.$DOMAIN
      - VIRTUAL_PORT=9117
      - TZ=$TIMEZONE
      - PGID=$GROUPID
      - PUID=$USERID
    volumes:
      - $APPDATA/$STACK/$JACKETT:/config
      - $DOWNLOADS/torrent:/data/downloads/torrent
      - $DOWNLOADS/usenet:/data/downloads/usenet
    networks:
      - ext_net

# Torrent download clients
  transmission:
    container_name: $STACK-$TRANSMISSION
    image: haugene/transmission-openvpn
    restart: always
    cap_add:
      - NET_ADMIN
    dns:
      - 8.8.8.8
      - 8.8.4.4
    depends_on:
      - organizr
    labels:
      - "traefik.enable=true" # Enable reverse-proxy for this service
      - "traefik.frontend.rule=Host:$TRANSMISSION.$DOMAIN" # Domain name for the app
      - "traefik.frontend.auth.forward.address=http://organizr/api/?v1/auth&group=1"
      - "traefik.port=9091"
    ports:
      - 9091:9091
    environment:
      - VIRTUAL_HOST=$TRANSMISSION.$DOMAIN
      - VIRTUAL_PORT=9091
      - PGID=$GROUPID
      - PUID=$USERID
      - CREATE_TUN_DEVICE=$CREATE_TUN_DEVICE
      - OPENVPN_PROVIDER=$OPENVPN_PROVIDER
      - OPENVPN_CONFIG=$OPENVPN_CONFIG
      - OPENVPN_USERNAME=$OPENVPN_USERNAME
      - OPENVPN_PASSWORD=$OPENVPN_PASSWORD
      - OPENVPN_OPTS=$OPENVPN_OPTS
      - NORDVPN_PROTOCOL=$NORDVPN_PROTOCOL
      - NORDVPN_CATEGORY=$NORDVPN_CATEGORY
      - WEBPROXY_ENABLED=false
      - LOCAL_NETWORK=$LOCAL_NETWORK
      - TRANSMISSION_DOWNLOAD_DIR=$TRANSMISSION_DOWNLOAD_DIR
      - TRANSMISSION_SCRAPE_PAUSED_TORRENTS_ENABLED=false
      - TRANSMISSION_RATIO_LIMIT_ENABLED=$TRANSMISSION_RATIO_LIMIT_ENABLED
      - TRANSMISSION_RATIO_LIMIT=$TRANSMISSION_RATIO_LIMIT
      - TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED=$TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED
      - TRANSMISSION_IDLE_SEEDING_LIMIT=$TRANSMISSION_IDLE_SEEDING_LIMIT
      - TRANSMISSION_DOWNLOAD_QUEUE_ENABLED=$TRANSMISSION_DOWNLOAD_QUEUE_ENABLED
      - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=$TRANSMISSION_DOWNLOAD_QUEUE_SIZE
      - TRANSMISSION_PORT_FORWARDING_ENABLED=$TRANSMISSION_PORT_FORWARDING_ENABLED
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DOWNLOADS/torrent:/data/downloads/torrent
    networks:
      - ext_net

# Usenet download clients
  nzbget:
    image: "linuxserver/nzbget:testing"
    container_name: $STACK-$NZBGET
    restart: always
    depends_on:
      - organizr
    labels:
      - "traefik.enable=true" # Enable reverse-proxy for this service
      - "traefik.frontend.rule=Host:$NZBGET.$DOMAIN" # Domain name for the app
      - "traefik.frontend.auth.forward.address=http://organizr/api/?v1/auth&group=1"
      - "traefik.port=6789"
    ports:
      - 6789:6789
    environment:
      - VIRTUAL_HOST=$NZBGET.$DOMAIN
      - VIRTUAL_PORT=6789
      - PUID=$USERID
      - PGID=$GROUPID
      - TZ=$TIMEZONE
    volumes:
      - $APPDATA/$STACK/$NZBGET:/config
      - $DOWNLOADS/usenet:/data/downloads/usenet
    networks:
      - ext_net

# Utility services
  ddclient:
    image: "linuxserver/ddclient"
    container_name: $STACK-ddclient
    restart: always
    environment:
      - PUID=$USERID
      - PGID=$GROUPID
      - TZ=$TIMEZONE
    volumes:
      - $APPDATA/$STACK/ddclient:/config
    networks:
      - ext_net

  portainer:
    image: "portainer/portainer"
    container_name: $STACK-$PORTAINER
    restart: always
    depends_on:
      - organizr
    labels:
      - "traefik.enable=true" # Enable reverse-proxy for this service
      - "traefik.frontend.rule=Host:$PORTAINER.$DOMAIN" # Domain name for the app
      - "traefik.frontend.auth.forward.address=http://organizr/api/?v1/auth&group=1"
      - "traefik.port=9000"
    environment:
      - VIRTUAL_HOST=$PORTAINER.$DOMAIN
      - VIRTUAL_PORT=9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $APPDATA/$STACK/$PORTAINER:/data
    networks:
      - ext_net

  duplicati:
    image: "linuxserver/duplicati"
    container_name: $STACK-$DUPLICATI
    restart: always
    depends_on:
      - organizr
    labels:
      - "traefik.enable=true" # Enable reverse-proxy for this service
      - "traefik.frontend.rule=Host:$DUPLICATI.$DOMAIN" # Domain name for the app
      - "traefik.frontend.auth.forward.address=http://organizr/api/?v1/auth&group=1"
      - "traefik.port=8200"
    environment:
      - VIRTUAL_HOST=$DUPLICATI.$DOMAIN
      - VIRTUAL_PORT=8200
      - PUID=$USERID
      - PGID=$GROUPID
      - TZ=$TIMEZONE
    volumes:
      - $APPDATA/$STACK/$DUPLICATI:/config
      - $APPDATA/$STACK:/source
    networks:
      - ext_net

volumes:
  organizr_config:
  emby_config:
  airsonic_config:
  ombi_config:
  sonarr_config:
  radarr_config:
  radarrcollection_config:
  lidarr_config:
  jackett_config:
  nzbget_config:
  ddclient_config:
  portainer_config:
  duplicati_config:

networks:
  ext_net:
    external:
      name: $EXT_NET
